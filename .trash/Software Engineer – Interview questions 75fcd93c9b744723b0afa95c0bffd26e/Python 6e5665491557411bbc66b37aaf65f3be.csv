Question,Type,Answer,URL
"SOLID, KISS, DRY, YAGNI",Best practices,"• S – Принцип единственной ответственности (Single Responsibility Principle) каждый класс должен выполнять только те цели, для которых был задуман;
• O – Принцип открытости/закрытости (Open‐Closed Principle) класс открыт для расширения и закрыт для модифицирования;
• L – Принцип подстановки Барбары Лисков (Liskov Substitution Principle) объект дочернего класса должен полностью заменять объект родительского класса;
• I – Принцип разделения интерфейсов (Interface Segregation Principle) лучше несколько маленьких классов, чем один большой;
• D – Принцип инверсии зависимостей (Dependency Inversion Principle) должны быть зависимости на классах, а не классы на зависимости.

keep it simple stupid (простые функции), do not repeat yourself, you are not gonna need it (говно удалять)",
Паттерны проектирования,Best practices,"Паттерны проектирования описывают типичные способы решения часто встречающихся проблем при проектировании программ.

Три группы: поведенческие, порождающие и структурные.

Proxy (Заместитель) — это структурный паттерн проектирования, который позволяет подставлять вместо реальных объектов специальные объекты-заменители. Эти объекты перехватывают вызовы к оригинальному объекту, позволяя сделать что-то до или после передачи вызова оригиналу.

Прототип — это порождающий паттерн проектирования, который позволяет копировать объекты, не вдаваясь в подробности их реализации.",https://refactoring.guru/ru/design-patterns/python
Зачем нужны БД,Databases,"Потому что они работают быстрее, чем просто считывание файла БД работает быстрее? потому что МАТЕША, потому что оптимизировано",
"Какие базы данных NoSQL знаешь? Плюсы и минусы? ",Databases,"Нереляционная база данных (NoSQL) — хранит данные без четких связей друг с другом и четкой структуры. Вместо структурированных таблиц внутри базы находится множество разнородных документов, в том числе изображения, видео и даже публикации в социальных сетях. В отличие от реляционных БД, NoSQL базы данных не поддерживают запросы SQL.

MongoDB, Redis
[+] Соответствие ACID
[+] динамическая схема
[+] горизонтально расширяемые
[+] document, key-value, graph, or wide-column stores",
"Какие базы данных SQL знаешь? Плюсы и минусы? ",Databases,"Реляционная база данных (SQL) — база, где данные хранятся в формате таблиц, они строго структурированы и связаны друг с другом. В таблице есть строки и столбцы, каждая строка представляет отдельную запись, а столбец — поле с назначенным ей типом данных. В каждой ячейке информация записана по шаблону.

PostgreSQL, MySQL
[+] Гибкость
[+] predefined схема 
[+] вертикально расширяемые
[+] table-based",
ACID,Databases,"В информатике акроним ACID описывает требования к транзакционной системе, обеспечивающие наиболее надёжную и предсказуемую её работу.

1. https://habr.com/ru/post/555920/#atomicity каждая транзакция будет выполнена полностью или не будет выполнена совсем
2. https://habr.com/ru/post/555920/#consistency каждая успешная транзакция по определению фиксирует только допустимые результаты
3. https://habr.com/ru/post/555920/#isolation одна тразакция не может вклиниться в другую
4. https://habr.com/ru/post/555920/#durability если что-то зафиксировано в системе, то это не изменить уже",
Какие различия между MySQL & PostgreSQL?,Databases,"PostgreSQL быстрая open-source СУБД, а MySQL более прост в настройке.

MySQL: 
- чисто реляционная
- single-processing
- data types: numeric, date/time, char, spatial, json
- indexes supported: primarily b-tree, r-tree, hash and indexes for certain data types 

PostgreSQL: 
- объектно-реляционная (table inheritance, function overloading, better handling of concurrency)
- multiprocessing
- data types: += boolean, enumerated, geometric, network address, xml, hstore, arrays, ranges, composite
- B-tree, hash, GiST, SP-GiST, GIN, and BRIN

Улучшенная конкурентность в Postgres засчет MVCC, который поддерживает параллельный доступ",
CAP theorem,Databases,"Теорема CAP (известная также как теорема Брюера) — эвристическое утверждение о том, что в любой реализации https://ru.wikipedia.org/wiki/%D0%A0%D0%B0%D1%81%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D1%91%D0%BD%D0%BD%D1%8B%D0%B5_%D0%B2%D1%8B%D1%87%D0%B8%D1%81%D0%BB%D0%B5%D0%BD%D0%B8%D1%8F возможно обеспечить не более двух из трёх следующих свойств:

• согласованность данных (англ. consistency) — во всех вычислительных узлах в один момент времени данные не противоречат друг другу;
• доступность (англ. availability) — любой запрос к распределённой системе завершается корректным откликом, однако без гарантии, что ответы всех узлов системы совпадают;
• устойчивость к разделению (англ. partition tolerance) — расщепление распределённой системы на несколько изолированных секций не приводит к некорректности отклика от каждой из секций.",
Какие есть типы связей?,Databases,"Есть три типа связей: 
— 1 к 1: данные о сотрудниках дочерних отделов (почти всегда такие таблицы объединяются)
— 1 ко многим: у одного клиента может быть несколько телефонов, но в тоже время мы можем быть уверены в том, что один конкретный номер может быть только у одного клиента
— много ко многим: первое — одну книгу может написать несколько авторов, второе — автор может написать несколько книг.",
"Primary key, Foreign key",Databases,"PK — однозначно идентифицирует какую-то строку в таблице.
FK — для связи таблиц с друг другом

Оба могут состоять более чем из одного столбца.",
Зачем нужен индексы? Какие виды индексов?,Databases,"Индексы — это структура данных, которая позволяет быстро определить положение интересующих объектов в базе. 

CREATE INDEX table_name_idx
ON table(column)

PostgreSQL поддерживает несколько типов индексов : B-дерево, хеш, GiST, SP-GiST, GIN и BRIN. Для разных типов индексов применяются разные алгоритмы, ориентированные на определённые типы запросов. По умолчанию команда CREATE INDEX создаёт индексы типа B-дерево, эффективные в большинстве случаев.",
Зачем нужны триггеры?,Databases,"Триггеры — это хранимая процедура особого типа, которую пользователь не вызывает непосредственно, а исполнение которой обусловлено действием по модификации данных. 

С помощью триггеров можно реализовать проверку сложных логических условий, выполнение которых обеспечивает непротиворечивость данных.",
Что такое транзакция?,Databases,"Транзакция — это набор операций по работе с базой данных (БД), объединенных в одну атомарную пачку. Или выполнены все запросы, которые разработчик упаковал в одну транзакцию, или ни один.",
Изолированности транзакции. Какие уровни есть?,Databases,"Изолированность транзакции показывает то, насколько сильно влияют друг на друга параллельно выполняющиеся транзакции. Выбирая уровень транзакции, мы пытаемся прийти к консенсусу в выборе между высокой согласованностью данных между транзакциями и скоростью выполнения этих самых транзакций.

От низшей к высшей:
— Read uncommitted
— Read committed
— Repeatable read
— Serializable",https://habr.com/ru/post/469415/
Quick sort,Algos,"1. Выбираем опорный элемент в массиве и бьем массив на три группы: меньше опорного (1), больше опорного (3) и равный опорному (2).
2. Две группы (1) и (3) вызываются рекурсивно. Берется новый опорный элемент.. 
3. Рекурсия работает до тех пор пока не будет одного элемента в под-массиве, либо пока не будет пустой список.


best case: O(n*log(n))
worst case: O(n^2)",https://www.youtube.com/watch?v=mCl1hBMFS8U
Merge sort,Algos,"1. Список делится пополам. Если нечетная длина, то меньшая в начале и большая в конце.
2. Рекурсивно вызываем пока в разделенном массиве будет только один элемент.
3. Дальше эти листы с одним элементом начинаем соединять до тех пор пока не соединим все списки снизу вверх.

Python uses Timosort — derived from merge sort and insertion sort

best case: O(n*log(n))
worst case: O(n*log(n))",https://www.youtube.com/watch?v=LCfwxi2RPK4
TCP / IP,Web,"Стек протоколов TCP/IP (Transmission Control Protocol/Internet Protocol, протокол управления передачей/протокол интернета) — сетевая модель, описывающая процесс передачи цифровых данных.",
http / https,Web,HyperText Transfer Protocol: протокол небезопасный / протокол безопасный (with SSL),
Методы http,Web,"Методы HTTP:
— GET: получение информации с сервера
— HEAD: получение только заголовков
— POST: для отправки данных (напр, форм)
— PUT: для загрузки содержимого
— DELETE: удаляет URI
— CONNECT: преобразует соединение в тоннель
— OPTIONS: получение параметров текущего соединения
— TRACE: создает петлю, чтобы увидеть что происходит с сообщением на разных этапах
— PATCH: используется для частичного изменения ресурса.",https://developer.mozilla.org/ru/docs/Web/HTTP/Methods
DNS,Web,"DNS-сервер служит телефонной книгой. Он хранит информацию о том, какому IP-адресу соответствует то или иное доменное имя. В интернете DNS-серверов очень много. У них двойная роль:
• главная — «телефонная интернет-книга»;
• дополнительная (но тоже важная) — кэширование записей других DNS-серверов.",
REST and RESTful API,Web,"REST — это набор правил того, как программисту организовать написание кода серверного приложения, чтобы все системы легко обменивались данными и приложение можно было масштабировать.

Принципы REST:
• единый интерфейс;
• разграничение клиента и сервера;
• нет сохранения состояния;
• кэширование всегда разрешено;
• многоуровневая система;
• код предоставляется по запросу.

RESTful — это прилагательное, которое мы употребляем по отношению к сервисам, которые следуют REST.",
Коды состояния http,Web,"1xx — информационные
2xx — успешные
3xx — перенаправления
4xx — ошибка клиенты (неверный запрос со стороны пользователя)
5xx — ошибка сервера (все ошибки со стороны сервера)",
"Что происходит в тот момент, когда в адресной строке нажимается ввод",Web,"1. Введеный URL идет в DNS и там находит IP сервера, но также может зайти в историю браузера, в ОС, в кэш роутера.
2. Браузер устанавливает соединение с сервером и для этого используется протокол TCP. Происходит handshake.
3. Браузер отправляет запрос, чтобы получить контент сайта. 
4. Сервер отправляет ответ браузеру. В браузере рисуется страница. Сначала чисто HTML, а потом отправляются дополнительные GET-запросы на подгрузку контента.",
Cookies,Web,"Cookies — небольшой фрагмент данных, отправленный веб-сервером и хранимый на компьютере пользователя.

Применяется для сохранения данных на стороне пользователя, на практике обычно используется для:
• аутентификации пользователя;
• хранения персональных предпочтений и настроек пользователя;
• сведения статистики о пользователях.",
Авторизация и аутентификация,CS,"Аутентификация — процедура проверки подлинности, например проверка подлинности пользователя путем сравнения введенного им пароля с паролем, сохраненным в базе данных. 

Авторизация — предоставление определенному лицу или группе лиц прав на выполнение определенных действий.",
Нормализация баз данных,Databases,"Нормализация — это процесс организации данных в базе данных, включающий создание таблиц и установление отношений между ними в соответствии с правилами, которые обеспечивают защиту данных и делают базу данных более гибкой, устраняя избыточность и несогласованные зависимости.",
Сборка муссора,CS,"Нужен для автоматического удаления объектов в памяти, если они больше не используются",
MVC,CS,"Model-View-Controller (MVC). MVC включает в себя 3 компонента: Модель, Представление и Контроллер. Каждый из компонентов выполняет свою роль и является взаимозаменяемым. Это значит, что компоненты связаны друг с другом лишь некими четкими интерфейсами, за которыми может лежать любая реализация. Такой подход позволяет подменять и комбинировать различные компоненты, обеспечивая необходимую логику работы или внешний вид приложения.",
Websockets,Web,"WebSockets — это технология, которая позволяет открывать сеанс интерактивной связи между браузером пользователя и сервером. С помощью этой технологии пользователь может отправлять сообщения на сервер и получать управляемые событиями ответы, не требуя длительного опроса, то есть без необходимости постоянно проверять сервер на предмет ответа.",
Линтеры и форматоры,Python,"Linters analyze code to catch errors and suggest best practices (using the abstract syntax tree, or AST). (Function complexity, syntax improvements, etc.) 

Formatters fix style. (Spacing, line jumps, comments, etc.)

Formatters:
• black: opinionated formatter
• autopep8: only fixes pep8 violations
• yapf: reformats entire code to the best style possible

Linters:
• pylint: very strict linter (coding standards, code smells, simple refactors)
• flake8: enforce coding standards
• bandit: find security issues",
Celery,Tools & Cloud,это асинхронная очередь задач с открытым исходным кодом,
RabbitMQ,Tools & Cloud,программный брокер сообщений,
В каком виде можно хранить данные в файлах?,Tools & Cloud,"либо в файлах либо в БД

JSON JavaScript Object Notation
CSV Comma-Separated Values",
Что такое swagger?,Tools & Cloud,"Swagger — это набор инструментов, которые помогают описывать API. Благодаря ему пользователи и машины лучше понимают возможности REST API без доступа к коду. С помощью Swagger можно быстро создать документацию и отправить ее другим разработчикам или клиентам.",
Docker,Tools & Cloud,"Docker — программное обеспечение для автоматизации развёртывания и управления приложениями в средах с поддержкой контейнеризации, контейнеризатор приложений.

Команды:
• create — создание контейнера из образа.
• start — запуск существующего контейнера.
• run — создание контейнера и его запуск.
• ls — вывод списка работающих контейнеров.
• inspect — вывод подробной информации о контейнере.
• logs — вывод логов.
• stop — остановка работающего контейнера с отправкой главному процессу контейнера сигнала SIGTERM, и, через некоторое время, SIGKILL.
• kill — остановка работающего контейнера с отправкой главному процессу контейнера сигнала SIGKILL.
• rm — удаление остановленного контейнера.",
Что такое network в докере?,,,
,,,
,,,